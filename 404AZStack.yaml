AWSTemplateFormatVersion: '2010-09-09'
Description: >
  MedEquip International Cloud Infrastructure with two VPCs: MDB (private only) and MApp (public + private),
  VPC Peering, subnets, routing, and security groups configured for the use case.

Resources:

  ## MDB VPC (Private VPC for database & critical systems)
  MDBVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MDB-VPC

  # MDB Private Subnet 1 (AZ1)
  MDBPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MDBVPC
      CidrBlock: 10.10.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: MDB-Private-Subnet-1

  # MDB Private Subnet 2 (AZ2)
  MDBPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MDBVPC
      CidrBlock: 10.10.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: MDB-Private-Subnet-2

  # MDB Private Route Table
  MDBPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MDBVPC
      Tags:
        - Key: Name
          Value: MDB-Private-RouteTable

  # Associate MDB Private Subnet 1 with Private Route Table
  MDBPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MDBPrivateSubnet1
      RouteTableId: !Ref MDBPrivateRouteTable

  # Associate MDB Private Subnet 2 with Private Route Table
  MDBPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MDBPrivateSubnet2
      RouteTableId: !Ref MDBPrivateRouteTable

  # No Internet Gateway or route to IGW in MDB VPC - fully private

  ## MApp VPC (Public + Private subnets)
  MAppVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.20.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: M-App-VPC

  # MApp Public Subnet 1 (AZ1)
  MAppPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MAppVPC
      CidrBlock: 10.20.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MApp-Public-Subnet-1

  # MApp Public Subnet 2 (AZ2)
  MAppPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MAppVPC
      CidrBlock: 10.20.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MApp-Public-Subnet-2

  # MApp Private Subnet 1 (AZ1)
  MAppPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MAppVPC
      CidrBlock: 10.20.101.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: MApp-Private-Subnet-1

  # MApp Private Subnet 2 (AZ2)
  MAppPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MAppVPC
      CidrBlock: 10.20.102.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: MApp-Private-Subnet-2

  # MApp Internet Gateway
  MAppInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MApp-IGW

  # Attach Internet Gateway to MApp VPC
  MAppAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MAppVPC
      InternetGatewayId: !Ref MAppInternetGateway

  # MApp Public Route Table (with IGW)
  MAppPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MAppVPC
      Tags:
        - Key: Name
          Value: MApp-Public-RouteTable

  # Route for Public Route Table to Internet Gateway
  MAppPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: MAppAttachGateway
    Properties:
      RouteTableId: !Ref MAppPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MAppInternetGateway

  # Associate Public Subnet 1 to Public Route Table
  MAppPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MAppPublicSubnet1
      RouteTableId: !Ref MAppPublicRouteTable

  # Associate Public Subnet 2 to Public Route Table
  MAppPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MAppPublicSubnet2
      RouteTableId: !Ref MAppPublicRouteTable

  # MApp Private Route Table (no route to IGW)
  MAppPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MAppVPC
      Tags:
        - Key: Name
          Value: MApp-Private-RouteTable

  # Associate Private Subnet 1 to Private Route Table
  MAppPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MAppPrivateSubnet1
      RouteTableId: !Ref MAppPrivateRouteTable

  # Associate Private Subnet 2 to Private Route Table
  MAppPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MAppPrivateSubnet2
      RouteTableId: !Ref MAppPrivateRouteTable

  ## VPC Peering Connection between MDB and MApp
  VPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref MDBVPC
      PeerVpcId: !Ref MAppVPC
      Tags:
        - Key: Name
          Value: MDB-MApp-Peering

  # Route in MDB Private Route Table to MApp VPC CIDR via Peering
  MDBToMAppPeeringRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MDBPrivateRouteTable
      DestinationCidrBlock: 10.20.0.0/16
      VpcPeeringConnectionId: !Ref VPCPeeringConnection

  # Route in MApp Public Route Table to MDB VPC CIDR via Peering
  MAppPublicToMDBPeeringRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MAppPublicRouteTable
      DestinationCidrBlock: 10.10.0.0/16
      VpcPeeringConnectionId: !Ref VPCPeeringConnection

  # Route in MApp Private Route Table to MDB VPC CIDR via Peering
  MAppPrivateToMDBPeeringRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MAppPrivateRouteTable
      DestinationCidrBlock: 10.10.0.0/16
      VpcPeeringConnectionId: !Ref VPCPeeringConnection

  # Security Group for MDB VPC allowing all traffic from MApp VPC CIDR
  MDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all traffic from M-App-VPC CIDR block
      VpcId: !Ref MDBVPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 10.20.0.0/16

  # Security Group for MApp VPC allowing all traffic from MDB VPC CIDR
  MAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all traffic from MDB-VPC CIDR block
      VpcId: !Ref MAppVPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 10.10.0.0/16

Outputs:

  MDBVPCId:
    Description: "MDB VPC ID"
    Value: !Ref MDBVPC

  MAppVPCId:
    Description: "MApp VPC ID"
    Value: !Ref MAppVPC

  MDBPrivateSubnet1Id:
    Description: "MDB Private Subnet 1 ID"
    Value: !Ref MDBPrivateSubnet1

  MDBPrivateSubnet2Id:
    Description: "MDB Private Subnet 2 ID"
    Value: !Ref MDBPrivateSubnet2

  MAppPublicSubnet1Id:
    Description: "MApp Public Subnet 1 ID"
    Value: !Ref MAppPublicSubnet1

  MAppPublicSubnet2Id:
    Description: "MApp Public Subnet 2 ID"
    Value: !Ref MAppPublicSubnet2

  MAppPrivateSubnet1Id:
    Description: "MApp Private Subnet 1 ID"
    Value: !Ref MAppPrivateSubnet1

  MAppPrivateSubnet2Id:
    Description: "MApp Private Subnet 2 ID"
    Value: !Ref MAppPrivateSubnet2
